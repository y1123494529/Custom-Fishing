name: Gradle CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false  # 禁用 Gradle 守护进程（CI 环境推荐）

    steps:
      # 1. 检出代码（必须使用 v4）
      - uses: actions/checkout@v4

      # 2. 设置 JDK（推荐 Temurin 17）
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"  # 自动缓存 Gradle 依赖

      # 3. 授予 gradlew 执行权限（重要！）
      - name: Make gradlew executable
        run: chmod +x gradlew

      # 4. 构建项目（带测试）
      - name: Build with Gradle
        run: ./gradlew build --stacktrace --info

      # 5. 上传构建产物（JAR 和 javadoc）
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: |
            build/libs/*.jar
            build/docs/javadoc/**/*
          retention-days: 7  # 自动清理旧产物

  # 可选：发布到 GitHub Packages
  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Publish to GitHub Packages
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动注入的 token